{"pages":[],"posts":[{"title":"R的可视化进击之路（一）","text":"我们的人生，永远不知道什么时候会遇到什么事情？比如说，说不定你就从c++中解脱，然后又陷入R和python的大坑了&gt;&lt; R语言是专门为统计和数据分析开发的语言，各种功能和函数琳琅满目，其中成熟稳定的一抓一把。下载了包以后library()一下，然后就可以愉快的使用了。最最最主要是的他是免费的而且还是开源的，安装程序也很小，比某些贵的死而且3个G的软件好太多！（翻译：我没钱而且电脑很烂~） 然后之前，因为一些不可抗的原因，开始了用R可视化之旅~ 为了同时显示数据和地图，首先&gt;&lt;需要对画图界面进行分块，上面可以用来显示地图，下面用于数据统计：12mat &lt;- matrix(c(1:2),2,1)layout(mat,1,2) 当然，作为一个稍微对美有追求的女“程序猿”，我要把这个边距调整一下&gt;&lt;1par(mar = c(1, 1, 1, 1)) 然后就需要读取数据了，这个大家可以自行读取自己的shp,这个在这里就不赘述了。如果对图形有追求的需要加底图和边界，因为是需要自己设计整个图形界面，平常常用的spplot()函数在这里就不能应用了，所以调色，设计都需要自己手把手做。为了方便在这里需要一些包：1234library(RColorBrewer)require(rgeos)library(GISTools)library(lattice) 接下来呢，我们对数据分布做一个描述，便于利用数据情况来进行颜色和大小的调整：123456789101112131415161718192021222324level &lt;-(max(pointData) - min(pointData))/6 legVals &lt;- c(min(pointData)+level,min(pointData)+2*level,min(pointData)+3*level,min(pointData)+4*level,min(pointData)+5*level) legVals&lt;-as.integer(legVals) if(colorStyle ==\"red\")&#123; colSet = rgb(r=1-(legVals -min(pointData))/(max(pointData)-min(pointData)),g=0,b=0) colSet_legend = rgb(r=1-(legVals -min(pointData))/(max(pointData)-min(pointData)),g=0,b=0) &#125; else if(colorStyle ==\"blue\")&#123; colSet = rgb(r=0.2,g=0,b=1-(legVals -min(pointData))/(max(pointData)-min(pointData))) colSet_legend = rgb(r=0.2,g=0,b=1-(legVals -min(pointData))/(max(pointData)-min(pointData))) &#125; else if(colorStyle ==\"green\")&#123; colSet = rgb(r=0,g=1-(legVals -min(pointData))/(max(pointData)-min(pointData)),b=0) colSet_legend = rgb(r=0,g=1-(legVals -min(pointData))/(max(pointData)-min(pointData)),b=0) &#125; ######缺省值赋值为黑色# else&#123; colSet = rgb(r=0,g=0,b=0) &#125; 当然，在这里偷了懒，只用了红绿蓝三种颜色模式，为了让背景颜色相呼应，我们顺便设置一下背景颜色吧~1234567891011121314if(borderStyle ==\"red\")&#123; plot(backGround, col=\"white\", lty=2, border = \"red\") &#125; else if(borderStyle ==\"blue\")&#123; plot(backGround, col=\"white\", lty=2, border = \"blue\") &#125; else if(borderStyle ==\"green\")&#123; plot(backGround, col=\"white\", lty=2, border = \"green\") &#125; ######缺省值赋值为黑色 else&#123; plot(backGround, col=\"white\", lty=2, border = \"black\") &#125; 最重要的添加数据来了喵~我这里是根据数据类型来进行绘图的：12345678910111213141516###判断DataSource类型#### if(class(DataSource)==\"SpatialPointsDataFrame\")&#123; plot(DataSource , pch=16, col=colSet , cex=(pointData-min(pointData))/(max(pointData)-min(pointData)),add=T) &#125; if(class(DataSource)==\"SpatialPolygonsDataFrame\")&#123; plot(DataSource , col=colSet,add=T) &#125; #legend(\"bottomright\", legend = legVals,pch =16 , col=colSet,pt.cex =(pointData-min(pointData))/(max(pointData)-min(pointData))*3, title = legendTitle) legend(\"bottomright\", legend = legVals,pch =16 , col=colSet_legend,pt.cex =(legVals -min(pointData))/(max(pointData)-min(pointData))*3, title = legendTitle) 本来我是根据底图的坐标放置指北针和图例，可是因为指北针和图例的大小真是太鸡肋了，所以我改成鼠标点击了，轻松畅快。1234cat(\"请用鼠标点击指北针位置\")north.arrow(unlist(locator(1))[1],unlist(locator(1))[2],miles2ft(0.1),cex.lab=0.8,col=colorStyle)cat(\"请用鼠标点击比例尺图标位置\")map.scale(unlist(locator(1))[1],unlist(locator(1))[2],miles2ft(0.5),\"Miles\",1,2) 最后，我们绘制一下数据的柱状图就大功告成了~~撒花撒花123456789101112131415161718192021222324252627#####绘制柱状图######### par(mar = c(1.8, 1.8, 1.8, 1.8)) if(colorStyle ==\"green\")&#123; hist(pointData,col = \"green\", border = \"pink\", main = HistTitle ,prob = TRUE) lines(density(pointData),col = \"darkgreen\",lty=2,cex = 3) &#125; else if(colorStyle == \"blue\")&#123; hist(pointData,col=rgb(r = 0,g = 0,b = 0.5), border = \"pink\", main = HistTitle,prob = TRUE) lines(density(pointData),col = \"darkblue\",lty=2) &#125; else if(colorStyle == \"red\")&#123; hist(pointData,col = rgb(r = 0.5,g = 0,b = 0), border = \"pink\", main = HistTitle,prob = TRUE) lines(density(pointData),col = \"drakred\",lty=2) &#125; else&#123; hist(pointData,col = rgb(r = 0,g = 0,b = 0), border = \"pink\", main = HistTitle,prob = TRUE) lines(density(pointData),col = \"black\",lty=2) &#125; 下面看一下结果吧~","path":"2018/01/05/test-post/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2018/01/04/hello-world/"}]}